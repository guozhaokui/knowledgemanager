需求
	主要部分是基于文档的
	不需要像blog那样搜索到以后还要看半天
	简单的问答式
		在有一定基础的前提下，直接给出最关键的内容
	系统介绍式
		完整的说明，需要较长的学习时间
	自动整理，分别
	可维护
	有历史记录
	有来源索引

	有权限控制
	可以修改，根据权限
	自动合并，避免相同或者相关信息在修改的时候需要大量操作
		通过关联或者合并的方法
	便于录入，例如通过移动设备随时录入
		最快的是照片和与语音，但是处理难度较大

	以零散小信息为主
	速度快，可以即时提醒，输入一部分的时候就可以出答案，类似IDO

	文件，连接等，为外部信息，可以指向

处理过程
	基于语句的
		分解

分词
	构建词典
		自动构建领域词典
	关系
		例如某两个词可能可以组合成一个更大的词
		或者更大的其实是两个小的组合的
		通过概率，
			判断到底是随机还是有一定的关系
			如果与偶然拼成的理论概率差不多，则无关系
	独立词
		几个字永远是只有在一起的时候才有意义。或者某个字后面必然会跟另外一个字（可能是常用字）
		例如  吩咐 陛下 蝙蝠 驸马 涟漪 蚂蚁 馒头 垃圾
	
	其他独立词
		例如人名，组成他的每个字可能都是常用字，但是他们几个常常在一起，而且在一起的时候只是代表一个对象
			人名：
				整体出现
				出现多次（一次的先不考虑）
				一般作为主语或者宾语
		
	
区别
	例如人名就是一种区别，不同文章有不同的人名集合
		
区域
	为了权限控制需要有区域的概念，
		例如 gs的root密码
		这个点需要特殊处理，进行身份鉴别之后才能访问
temp
	符号都用来做教导
		内部保存用另外的东西
	会尝试进行主动输出
		1.模仿
		2.交互
	通过输出，教导，逐渐建立自己的数据库
		符合数据
			文字，单词等
		抽象数据
			部分指向符合数据和外部
		外部数据
	疑惑度

概率
	P(wi-1,wi)
	P(wi|wi-1)
		是前一个字为wi-1的情况下，出现wi的概率
		这个是需要计算的
		方法就是 P(wi-1,wi)/p(wi-1)
		
	是一个句子的概率
		可能为1么
		为什么要有第一个字出现的概率
			如果不考虑的话，随意两个冷门组合，都会导致高概率结果
			
		柿子
			柿后面基本必是子
		
		
单词
	独立单元，不可拆分，但是可以有很多属性（从组成部分就能看出一些）
	
参考
	wiki
	